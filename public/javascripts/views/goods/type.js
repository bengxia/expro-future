var zTree;var zNodes;//保存树节点的json对象var setting = {    check: {        enable: true,        chkStyle:"checkbox"    },    async: {        enable: true,        type:"get",        dataType:"text",        contentType:"application/json",        url:"/goods/type",        autoParam:["_id", "name"],        otherParam:{"otherParam":""},//可以传参，暂未使用        dataFilter: filter    },    view: {        dblClickExpand: false,        showLine: true,        selectedMulti: false,        expandSpeed: ($.browser.msie && parseInt($.browser.version)<=6)?"":"fast"    },    data: {        simpleData: {            enable:true,            idKey: "_id",            pIdKey: "parent_id",            rootPId: ""        }    },    callback: {        beforeClick: function(treeId, treeNode) {            var zTree = $.fn.zTree.getZTreeObj("tree");            zTree.expandNode(treeNode);//展开选中的支节点            //获取选中的节点详细信息            if(treeNode._id){                $.ajax({                    type: "Get",                    url: '/goods/type/'+treeNode._id,                    dataType: "json",                    global: false,                    async: false,                    success: function (result) {                        setContentValue(result);                        //设置按钮显示                        $('#addNewType').show();                        $('#delType').show();                        $('#editType').show();                        $('#saveNewType').hide();                        $('#updateType').hide();                        $('.allowInput').attr("readOnly", true);                    },                    error: function () {                        alert("Ajax请求数据失败!");                    }                });                return true;            }else{                return false;            }        }    }};function filter(treeId, parentNode, childNodes) {    if (!childNodes) return null;    for (var i=0, l=childNodes.length; i<l; i++) {        childNodes[i].name = childNodes[i].name.replace(/\.n/g, '.');    }    return childNodes;};//设置选中的节点值到表单var setContentValue = function(node){    if(node && node._id){        //$(".allowInput").attr('readonly', false);        $("#_id.noAllowInput").val(node._id);        $("#name.allowInput").val(node.name);        $("#parent_id").val(node.parent_id);        $("#create_time").val(node.create_time);        $("#isleaf").val(node.isleaf);        $("#level").val(node.level);        $("#comment").val(node.comment);    }else{        $().message("获取数据失败,可能是应为当前选中节点被删除！");    }};//清除input的内容，并设置所有input为非readonlyvar clearInput = function(){    $(".allowInput").attr("value", "");    $(".noAllowInput").attr("value", "");    /*     $("#_id").attr('readonly', false);     $("#parent_id").attr('readonly', false);     $("#create_time").attr('readonly', false);     $("#isleaf").attr('readonly', false);     $("#level").attr('readonly', false);     $("#name").attr('readonly', false);     $("#comment").attr('readonly', false);     $("#_id").val("");     $("#parent_id").val("");     $("#create_time").val("");     $("#isleaf").val("");     $("#level").val("");     $("#name").val("");     $("#comment").val("");     */};//页面初始化时调用，设置按钮显示，输入框是否只读等属性。var pageInit = function(){    // $('#addNewType').hide();    //$('#delType').hide();    //$('#saveNewType').hide();    //$('#updateType').hide();    //隐藏不显示的条目//    $('#_id_div').hide();//    $('#parent_id_div').hide();//    $('#isleaf_div').hide();//    $('#level_div').hide();    $('.noAllowShow').hide();    $('.btn').hide();    $('.noAllowInput').attr("readOnly", true);    $('.allowInput').attr("readOnly", true);};var treeInit = function(){    $.ajax({        type: "Get",        url: '/goods/type',        dataType: "text",        global: false,        async: false,        success: function (reslut) {            if(reslut){                zNodes=eval(reslut.goodsTypes);            }else{                $().message("获取数据失败!");            }        },        error: function () {            $().message("Ajax请求数据失败!");        }    });    var t = $("#tree");    t = $.fn.zTree.init(t, setting, zNodes);    //setShowAddBtn();    zTree = $.fn.zTree.getZTreeObj("tree");    zTree.selectNode(zTree.getNodeByParam("_id", 1));};$(function(){    /*******************************************     *              初始化页面显示     *******************************************/    pageInit();    treeInit();    /*******************************************     *                    事件响应     *******************************************/    //新增类型    $("#addNewType").click(function(){        //setShowSaveBtn();        //设置按钮显示        $('#addNewType').hide();        $('#delType').hide();        $('#saveNewType').show();        $('#updateType').hide();        $('#editType').hide();        //清除输入框原数据        clearInput();        $(".allowInput").removeAttr('readonly');        //获得当前选择的node        var nodes = zTree.getSelectedNodes();        if(!nodes){            $().message("请在左侧选择一个商品类型！");            return;        }        if(!nodes.length || nodes.length != 1){            $().message("请指定一个商品类型后再进行添加！");            return;        }        var selNode = nodes[0];        $("#parent_id").val(selNode._id);//设置选中的node的id为当前要创建的node的父节点        $("#isleaf").val('1');//当前肯定是叶子节点，需要判断若父节点原本是叶子则需要设置为“0”。        $("#level").val(selNode.level+1);    });    $("#editType").click(function(){        //设置按钮显示        $('#addNewType').hide();        $('#delType').hide();        $('#saveNewType').hide();        $('#updateType').show();        $('#editType').hide();        $(".allowInput").removeAttr('readonly');    });    // 保存 - 更新保存 - 删除 ---------------    $("#saveNewType").click(function(){        //$("#goods_type_form").submit();        //设置按钮显示        $('#addNewType').show();        $('#delType').show();        $('#saveNewType').hide();        $('#updateType').hide();        //        var parent_id = $("#parent_id").val();        var isleaf = $("#isleaf").val();        var level = $("#level").val();        var name = $("#name").val();        var comment = $("#comment").val();        var goodsType_json = {parent_id:parent_id, isleaf:isleaf, level:level, name:name, comment:comment};        console.log("goodsType_json:"+JSON.stringify(goodsType_json));        $.ajax({            type: "post",            url: '/goods/type?_csrf='+$("#_csrf").val(),            dataType: "json",            global: false,            async: false,            data: goodsType_json,            success: function (data, textStatus) {                $().message("添加成功！");                zTree.reAsyncChildNodes(null, "refresh");                //$("#popDialog").dialog("close");                //$("#list").trigger("reloadGrid", [{current:true}]);            },            error: function (XMLHttpRequest, textStatus, errorThrown) {                var res = JSON.parse(XMLHttpRequest.responseText);                $().message(res.error);//有错            }        });    });//设置提交的form的参数，及处理返回函数//    $("#goods_type_form").ajaxForm({//        beforeSubmit: validate,//        success: function(msg){//            if(201 == msg.status){//                //alert("成功添加新类型");//                $().message("成功添加新类型");//                //获得当前选择的node//                //var nodes = zTree.getSelectedNodes();//                zTree.reAsyncChildNodes(null, "refresh");//            }else{//                $().message("添加类型失败:"+msg.error);//            }//        }//    });    $("#updateType").click(function(){        //获得当前选择的node        //var nodes = zTree.getSelectedNodes();        var _id = $("#_id").val();        if(!_id){            $().message("请选择要更新的项！");        }else{            if(confirm("是否更新当前类型？")){                var parent_id = $("#parent_id").val();                var isleaf = $("#isleaf").val();                var level = $("#level").val();                var name = $("#name").val();                var comment = $("#comment").val();                var goodsType_json = {_id:_id, parent_id:parent_id, isleaf:isleaf, level:level, name:name, comment:comment};                console.log("goodsType_json:"+JSON.stringify(goodsType_json));                $.ajax({                    type: "put",                    url: "/goods/type/"+_id,                    data:goodsType_json,                    dataType: "json",                    global: false,                    async: false,                    success: function (data, textStatus) {                        $().message("更新成功！");                        zTree.reAsyncChildNodes(null, "refresh");                    },                    error: function (XMLHttpRequest, textStatus, errorThrown) {                        var res = JSON.parse(XMLHttpRequest.responseText);                        $().message(res.error);//有错                    }                });            }        }    });    $("#delType").click(function(){        //获得当前选择的node//        var nodes = zTree.getSelectedNodes();        var _id = $("#_id").val();        if(!_id){            $().message("请选择要删除的项！");        }else{            if(confirm("删除当前类型及其下所有子类型，您是否确认删除？")){                $.ajax({                    type: "delete",                    url: "/goods/type/"+_id,                    data: "_csrf=#{csrf}",                    dataType: "json",                    global: false,                    async: false,                    success: function (data, textStatus) {                        $().message("删除成功！");                        zTree.reAsyncChildNodes(null, "refresh");                    },                    error: function (XMLHttpRequest, textStatus, errorThrown) {                        var res = JSON.parse(XMLHttpRequest.responseText);                        $().message(res.error);//有错                    }                });            }        }    });//表单提交前的校验    function validate(formData, jqForm, options) {        //alert("1111");    };});