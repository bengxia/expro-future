//mocha test/deal.js var session = require('./session.lib.js');var sid;var dataId;var newJson = {    merchant_id:1,    name:"测试-胜太路门店-将被删除",    state:1,    inventar_num:"000111222",    district_code:"025-10001",    address:"南京市江宁区胜太路68号",    transit_info:"做12路车可直达",    map_info:"111,222,333,444",    notice:"公告：全部85折优惠！",    comment:"备注一下"};function signin(data, done, ct) {    session.postData('/signin', data, '', ct)        .end(function(res) {            res.statusCode.should.equal(200);            res.body.should.have.property('name');            sid = session.getSID(res);            done();        });};function addData(data, sid, done, ct) {	session.postData('/store', data, sid, ct)        .end(function(res2) {            res2.statusCode.should.equal(201);            res2.should.be.json;            console.log(JSON.stringify(res2.body));            dataId = res2.body.store._id;            done();        });};function deleteData(id, sid, done, ct) {	session.deleteData('/store/'+id, '', sid, ct)        .end(function(res2) {            res2.statusCode.should.equal(202);            res2.should.be.json;            console.log(JSON.stringify(res2.body));            done();        });};function updateData(data, sid, done, ct) {    session.putData('/store', data, sid, ct)        .end(function(res) {            res.statusCode.should.equal(200);            res.should.be.json;            console.log(JSON.stringify(res.body));            done();        });};function findOneData(id, sid, done, ct) {    session.getData('/store/'+id, sid)        .end(function(res) {            res.statusCode.should.equal(200);            res.should.be.json;            console.log(JSON.stringify(res.body));            done();        });};function getList(sid, done) {    session.getData('/stores', sid)        .end(function(res) {            res.statusCode.should.equal(200);            res.should.be.json;            console.log(JSON.stringify(res.body));            done();        });};describe('商户门店测试模块。', function() {    describe('#1、用户登录验证', function() {        it('验证用户登录，并获得sid。', function(done) {            signin({                cellphone:'18912345678',                password:'123456',                org:'1'            }, done);        })    });    describe('#2、获取全部门店列表', function() {        it('返回当前商户的所有门店Json。', function(done) {            getList(sid, done);        })    });    describe('#3、创建门店并关联商户', function() {        it('返回创建门店后的Json数据', function(done) {            addData(newJson, sid, done);        })    });    describe('#4、查询新增的门店', function() {        it('返回查询的门店Json数据', function(done) {            findOneData(dataId, sid, done);        })    });    describe('#5、更新门店', function() {        it('返回更新门店后的Json数据', function(done) {            newJson._id = dataId;            newJson.name = "测试更新-胜太路门店-将被删除";            updateData(newJson, sid, done);        })    });    describe('#6、查询更新的门店', function() {        it('返回查询的门店Json数据', function(done) {            findOneData(dataId, sid, done);        })    });    describe('#7、取消门店与商户的关联', function() {        it('返回取消关联的ID。', function(done) {            deleteData(dataId, sid, done);        })    });});/*describe('取消会员与商户的关联。', function() {    describe('POST /signin', function() {        it('开始测试：取消会员与商户的关联。', function(done) {            signin({                cellphone:'18912345678',                password:'123456',                org:'1'            })                .end(function(res) {                    res.statusCode.should.equal(200);                    res.body.should.have.property('name');                    var sid = session.getSID(res);                    deleteMember(memberId, sid)                        .end(function(res2) {                            res2.statusCode.should.equal(202);                            res2.should.be.json;                            console.log(JSON.stringify(res2.body));                            done();                        })                })        })    })});*//*describe('更新会员信息。', function() {    describe('POST /signin', function() {        it('开始测试：更新会员信息。', function(done) {            signin({                cellphone:'18912345678',                password:'123456',                org:'1'            })            .end(function(res) {                res.statusCode.should.equal(200);                res.body.should.have.property('name');                var sid = session.getSID(res);                updateMember(memberId, updateMemberJson, sid)                .end(function(res2) {                    res2.statusCode.should.equal(200);                    res2.should.be.json;                    console.log(JSON.stringify(res2.body));                    done();                })            })        })    })});*//*describe('deleteTestMember', function() {    describe('POST /signin', function() {        it('should succes sign in and return json', function(done) {            signin({                cellphone:'18912345678',                password:'123456',                org:'1'            })            .end(function(res) {                                res.statusCode.should.equal(200);                res.body.should.have.property('_id');                var sid = session.getSID(res);                 //postJson.dealer_id = res.body._id;                addMember(postJson, sid)                .end(function(res) {                	res.statusCode.should.equal(201);                	res.should.be.json;                	console.log(JSON.stringify(res.body));                	//res.body.should.have.property('cbdeal');                	//res.body.cbdeal.should.have.property('cbdeal_item');                    deleteMember(testMemberIds, sid)                	.end(function(res) {                		res.statusCode.should.equal(202);                		done();                		                	})                		                	                })                             })        })    })})describe('updateDeal', function() {    describe('POST /signin', function() {        it('should succes sign in and return json', function(done) {            signin({                cellphone:'18912345678',                password:'123456',                org:'1'            })            .end(function(res) {                                res.statusCode.should.equal(200);                res.body.should.have.property('_id');                var sid = session.getSID(res);                 postJson.dealer_id = res.body._id;                                                               addDeal(postJson, sid)                .end(function(res) {                	res.statusCode.should.equal(201);                	res.should.be.json;                	console.log(JSON.stringify(res.body));                	res.body.should.have.property('cbdeal');                	res.body.cbdeal.should.have.property('cbdeal_item');                	var json = {           													lid: 123,														dealer_id: res.body._id,							type: 1,							state: 1,							store_id: 32,							payment: 44,							cash: 98.12,							point: 150,							pay_type: 3,							create_time: "2012-05-23T08:49:04.000Z",							customer_id: 23,							deal_item:[{															lid : 234,								_id: res.body.cbdeal.cbdeal_item[0]._id,								goods_id : 454,								num : 2,								closing_cost : 111,								total_cost : 123.32								}							]                	}                	updateDeal(res.body.cbdeal._id, json, sid)                 	.end(function(res) {                		res.statusCode.should.equal(201);                		res.should.be.json;                	    console.log(JSON.stringify(res.body));                	    res.body.should.have.property('deal');                	    res.body.deal.should.have.property('deal_item');                		done();                		                	})                		                	                })                             })        })    })})*/